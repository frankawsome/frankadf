{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-Instance1-yanqing"
		},
		"ADLSstorageaccount1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSstorageaccount1'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzureSqlDatabaseLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseLinkedService'"
		},
		"Conn_AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Conn_AzureBlobStorage2'"
		},
		"LS_BlobAKV_jv36_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BlobAKV_jv36'",
			"defaultValue": "DefaultEndpointsProtocol=https;AccountName=storage2shx23oqojv36;EndpointSuffix=core.chinacloudapi.cn;"
		},
		"LS_SHIR_Source_blobtxt_jv36_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SHIR_Source_blobtxt_jv36'"
		},
		"LS_SHIR_Target_SqlDB_franksqldb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SHIR_Target_SqlDB_franksqldb1'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp1'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"Wkspc_databrickstest1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Wkspc_databrickstest1'"
		},
		"adf_AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'adf_AzureBatch1'"
		},
		"blobjv36_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobjv36'"
		},
		"franksqldb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'franksqldb1'"
		},
		"ADLSstorageaccount1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount1.dfs.core.chinacloudapi.cn/"
		},
		"AzureStorageLinkedService_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storage2shx23oqojv36.blob.core.chinacloudapi.cn/"
		},
		"RestService1sfasd_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.loganalytics.azure.cn/v1/workspaces/27e73cd8-e100-4a45-b60f-aa1a0d74c33f"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "storageaccount2.blob.core.chinacloudapi.cn"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "storageaccount2.container1.sftpuser1"
		},
		"SqlServer1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "frankpls1.53b3f1ca-acee-4aa0-973c-a6d57fb4b1c2.chinanorth3.azure.privatelinkservice"
		},
		"SqlServer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db1"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqlvmuser1"
		},
		"UAMIstorageaccount1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storageaccount1.blob.core.chinacloudapi.cn/"
		},
		"adf_AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://batchservice1.chinanorth3.batch.chinacloudapi.cn"
		},
		"adf_AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "testpool1"
		},
		"adf_AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "batchservice1"
		},
		"ls_akv1cn2_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://akv1cn2.vault.azure.cn/"
		},
		"AzureKeyVault20_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/RG-yanqing-ADF/providers/Microsoft.KeyVault/vaults/akv1cn2"
		},
		"AzureKeyVault20_properties_groupId": {
			"type": "string",
			"defaultValue": "vault"
		},
		"AzureKeyVault20_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"akv1cn2.vault.azure.cn"
			]
		},
		"AzurePostgreSql494_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/RGfrankpgsql/providers/Microsoft.DBforPostgreSQL/flexibleServers/pgsqlflex1"
		},
		"AzurePostgreSql494_properties_groupId": {
			"type": "string",
			"defaultValue": "postgresqlServer"
		},
		"AzurePostgreSql494_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"pgsqlflex1.postgres.database.chinacloudapi.cn"
			]
		},
		"MPE-blob-jv36_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/RG-yanqing-ADF/providers/Microsoft.Storage/storageAccounts/storage2shx23oqojv36"
		},
		"MPE-blob-jv36_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"MPE-blob-jv36_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"storage2shx23oqojv36.blob.core.chinacloudapi.cn"
			]
		},
		"MPE-sqldb1_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/RG-yanqing-ADF/providers/Microsoft.Sql/servers/franksqldbsvr1"
		},
		"MPE-sqldb1_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"MPE-sqldb1_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"franksqldbsvr1.database.chinacloudapi.cn"
			]
		},
		"PrivateLinkService44_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/AzureStorageTest/providers/Microsoft.Network/privateLinkServices/frankpls1"
		},
		"PrivateLinkService44_properties_groupId": {
			"type": "string",
			"defaultValue": ""
		},
		"PrivateLinkService44_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"frankpls1.53b3f1ca-acee-4aa0-973c-a6d57fb4b1c2.chinanorth3.azure.privatelinkservice"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADFHelloCopyDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_1hxdsfa",
						"description": "stsetteatefgsfadsfasdfsfasfsdfasdfsdfds",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "container1/csv/customers-100.csv"
							},
							{
								"name": "Destination",
								"value": "datafactory//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_1hx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_1hx",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [
							{
								"activity": "Copy_1hxdsfa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DestinationDataset_1hx",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-19T08:53:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_1hx')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_1hx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BatchserviceTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "activities_batchservice1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "cmd /C echo helloWorld",
								"type": "Expression"
							},
							"resourceLinkedService": {
								"referenceName": "UAMIstorageaccount1",
								"type": "LinkedServiceReference"
							},
							"folderPath": "input",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "adf_AzureBatch1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LABMay"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T05:07:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UAMIstorageaccount1')]",
				"[concat(variables('factoryId'), '/linkedServices/adf_AzureBatch1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CallDatabricksNotebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/yanqingguo@mcpod.partner.onmschina.cn/test dbutil copy DBFS to AureBlobStorage"
						},
						"linkedServiceName": {
							"referenceName": "Wkspc_databrickstest1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-06T03:45:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Wkspc_databrickstest1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBlob2SQLDBMgmtVnet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyBlobToSql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceblobdatasetMgmVnet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetSQLDBDatasetMgmtVnet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LABMay"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-20T11:07:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceblobdatasetMgmVnet')]",
				"[concat(variables('factoryId'), '/datasets/TargetSQLDBDatasetMgmtVnet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromBlobToSqlPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_a33",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfv2tutorial//inputEmp.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.emp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_a33",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_a33",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-22T03:02:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_a33')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_a33')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromBlobToSqlPipeline_ADF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromBlobToSql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfv2tutorial//inputEmp.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.emp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName|LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-22T08:27:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDataset')]",
				"[concat(variables('factoryId'), '/datasets/OutputSqlDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_sqltable_to_sqltable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set timewatermark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(empty(convertToUtc(variables('timewatermark1'), 'Pacific Standard Time')))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail2",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "cxvvfdv",
										"errorCode": "503305"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Name",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Age",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "Age",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Email",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Email",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "RegistrationDate",
														"type": "DateTime",
														"physicalType": "date"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_franksqldb1_TableSource",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_franksqldb1_TableTarget",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select WatermarkValue\nfrom watermarktable;\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set timewatermark",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "timewatermark1",
							"value": {
								"value": "@activity('Lookup1').output.firstRow.WatermarkValue",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"timewatermark": {
						"type": "Integer"
					},
					"timewatermark1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-06T05:52:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/ds_franksqldb1_TableSource')]",
				"[concat(variables('factoryId'), '/datasets/ds_franksqldb1_TableTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LABMay"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-23T05:25:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RerunTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().globalParameters.num,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "if failure message",
										"errorCode": "501"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": "https://www.baidu.com"
									}
								}
							]
						}
					},
					{
						"name": "EP Always success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Copy_sqltable_to_sqltable",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "EP Always failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "akvtest",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T06:15:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy_sqltable_to_sqltable')]",
				"[concat(variables('factoryId'), '/pipelines/akvtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestALA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getSPbearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{\n\"query\": \"AzureActivity | summarize count() by Category\" \n}",
								"additionalHeaders": {
									"content-type": "application/json; chartset=utf-8",
									"Authorization": {
										"value": "@concat('Bearer ', activity('getSPbearerToken').output.access_token)\n",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_blob_Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "getSPbearerToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.chinacloudapi.cn/mcpod.partner.onmschina.cn/oauth2/v2.0/token",
							"body": "client_id=7795fc75-3757-45aa-8581-5af29a47d80f&scope=https%3A%2F%2Fapi.loganalytics.azure.cn%2F.default&client_secret=_3Dlfn97-9JF20-b_3hkDGCfU73E3jm_Nt&grant_type=client_credentials"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-09T08:02:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/DS_blob_Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIRcopyBlob2Sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SHIR_Source_txt",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SHIR_Target_sqltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-20T12:50:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_Source_txt')]",
				"[concat(variables('factoryId'), '/datasets/DS_SHIR_Target_sqltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformMovies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "MappingDataflowTutorial:\n\nhttps://learn.microsoft.com/en-us/azure/data-factory/tutorial-data-flow",
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesDB": {},
									"DestinationSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LABMay"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-20T10:54:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/akvtest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://akv1cn2.vault.azure.cn/secrets/storageaccountaccesskey-jv361/5c7e0aa9f47b48e1865b62ab3be84c06/?api-version=7.0",
							"connectVia": {
								"referenceName": "AIR-MgmtVnet",
								"type": "IntegrationRuntimeReference"
							},
							"authentication": {
								"resource": "https://vault.azure.cn",
								"credential": {
									"referenceName": "uamgmtid1",
									"type": "CredentialReference"
								},
								"type": "UserAssignedManagedIdentity"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-04T03:28:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AIR-MgmtVnet')]",
				"[concat(variables('factoryId'), '/credentials/uamgmtid1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copySFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "SftpWriteSettings",
									"operationTimeout": "01:00:00",
									"useTempFileRename": true
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MoviesDBsource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds2sftp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T09:42:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesDBsource')]",
				"[concat(variables('factoryId'), '/datasets/ds2sftp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Employees;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-25T09:56:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SHIR_Source_txt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SHIR_Source_blobtxt_jv36",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "username.txt",
						"folderPath": "input",
						"container": "blobsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SHIR_Source_blobtxt_jv36')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SHIR_Target_sqltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SHIR_Target_SqlDB_franksqldb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SHIR_Target_SqlDB_franksqldb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_blob_Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSstorageaccount1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSstorageaccount1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1hx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Conn_AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "copysink",
						"container": "datafactory"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Conn_AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_a33')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "franksqldb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FirstName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/franksqldb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MovieSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSstorageaccount1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ADF1",
						"fileSystem": "adfdatatarget"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSstorageaccount1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesDBsource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSstorageaccount1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "100mb.csv",
						"folderPath": "ADF1",
						"fileSystem": "adfdatasource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSstorageaccount1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "franksqldb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/franksqldb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1sfasd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "query"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1sfasd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@CONCAT('Incremental-', pipeline().RunId, '.txt')",
							"type": "Expression"
						},
						"folderPath": "incrementalcopy",
						"container": "adftutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputEmp.txt",
						"container": "adfv2tutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName|LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "data_source_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1hx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "100mb.csv",
						"folderPath": "ADF1",
						"container": "adfdatasource"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_a33')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UAMIstorageaccount1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputEmp.txt",
						"container": "input"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UAMIstorageaccount1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceblobdatasetMgmVnet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobjv36",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "username.txt",
						"folderPath": "input",
						"container": "blobsource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobjv36')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetSQLDBDatasetMgmtVnet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "franksqldb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "table1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/franksqldb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds2sftp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/sftpfolder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_franksqldb1_TableSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TableSource"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_franksqldb1_TableTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TableTarget"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSstorageaccount1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSstorageaccount1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSstorageaccount1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"version": "1.0",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AIR-MgmtVnet-2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AIR-MgmtVnet-2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureStorageLinkedService_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conn_AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Conn_AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BlobAKV_jv36')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BlobAKV_jv36_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv1cn2",
							"type": "LinkedServiceReference"
						},
						"secretName": "storageaccountaccesskey-jv36"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv1cn2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_Source_blobtxt_jv36')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_SHIR_Source_blobtxt_jv36_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_Target_SqlDB_franksqldb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SHIR_Target_SqlDB_franksqldb1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IR1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1sfasd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1sfasd_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AIR-MgmtVnet-2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AIR-MgmtVnet-2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAMIstorageaccount1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "d",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('UAMIstorageaccount1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2",
					"credential": {
						"referenceName": "uamgmtid1",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/uamgmtid1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Wkspc_databrickstest1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1145774529647331.3.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Wkspc_databrickstest1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "13.3.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('adf_AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('adf_AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('adf_AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage2",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('adf_AzureBatch1_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobjv36')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobjv36_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AIR-MgmtVnet",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AIR-MgmtVnet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/franksqldb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('franksqldb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv1cn2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_akv1cn2_properties_typeProperties_baseUrl')]",
					"credential": {
						"referenceName": "uamgmtid1",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/uamgmtid1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTriger1_TransformMoives')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ScheduleTriger1_TransformMoives ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TransformMovies",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2024-05-12T13:15:00",
						"endTime": "2024-05-13T17:15:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TransformMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingTriggerTranformMoives')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TransformMovies",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 30,
					"startTime": "2024-05-13T09:23:00Z",
					"endTime": "2024-05-13T12:23:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 1,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TransformMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumblingwindowtrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "ADFHelloCopyDemo",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 30,
					"startTime": "2024-04-22T12:18:00Z",
					"endTime": "2024-04-23T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADFHelloCopyDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "IncrementalCopyPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 50,
						"startTime": "2024-04-22T19:53:00",
						"endTime": "2024-04-23T00:00:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/IncrementalCopyPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ADFHelloCopyDemo",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2024-04-22T12:19:00",
						"endTime": "2024-04-23T12:19:00",
						"timeZone": "China Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADFHelloCopyDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "ADFHelloCopyDemo",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2024-04-22T12:20:00Z",
					"endTime": "2024-04-23T12:20:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ADFHelloCopyDemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIR-MgmtVnet-2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "chinaeast2",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIR-MgmtVnet')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "chinaeast2",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-CDC')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesDBsource",
								"type": "DatasetReference"
							},
							"name": "MoviesDB"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MovieSink",
								"type": "DatasetReference"
							},
							"name": "DestinationSink",
							"description": "Save aggregated data to destination "
						}
					],
					"transformations": [
						{
							"name": "FilterYears",
							"description": " filter movies of genre comedy that came out between the years 1910 and 2000"
						},
						{
							"name": "AggregateComedyRatings"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesDB",
						"MoviesDB filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')) ~> FilterYears",
						"FilterYears aggregate(groupBy(year),",
						"     AverageComedyRating = avg(toInteger(Rating))) ~> AggregateComedyRatings",
						"AggregateComedyRatings sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DestinationSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesDBsource')]",
				"[concat(variables('factoryId'), '/datasets/MovieSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/uamgmtid1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/90b7dc34-f287-4964-8119-cca776f1e476/resourceGroups/RG-yanqing-ADF/providers/Microsoft.ManagedIdentity/userAssignedIdentities/UAmgmtid1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfcdc1')]",
			"type": "Microsoft.DataFactory/factories/adfcdcs",
			"apiVersion": "2018-06-01",
			"properties": {
				"SourceConnectionsInfo": [
					{
						"SourceEntities": [
							{
								"name": "input/cdc",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "container",
											"value": "input"
										},
										{
											"name": "fileSystem",
											"value": "input"
										},
										{
											"name": "folderPath",
											"value": "cdc"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedServiceType": "AzureBlobStorage",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "delimited"
								},
								{
									"name": "dateFormats",
									"value": [
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "timestampFormats",
									"value": [
										"yyyyMMddHHmm",
										"yyyyMMdd HHmm",
										"yyyyMMddHHmmss",
										"yyyyMMdd HHmmss",
										"dd-MM-yyyy HH:mm:ss",
										"dd-MM-yyyy HH:mm",
										"yyyy-M-d H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s\\'Z\\'",
										"yyyy-M-d\\'T\\'H:m:s",
										"yyyy-MM-dd\\'T\\'HH:mm:ss",
										"yyyy-MM-dd HH:mm:ss",
										"yyyy-MM-dd HH:mm",
										"yyyy.MM.dd HH:mm:ss",
										"MM/dd/yyyy HH:mm:ss",
										"M/d/yyyy H:m:s",
										"yyyy/MM/dd HH:mm:ss",
										"yyyy/M/d H:m:s",
										"dd MMM yyyy HH:mm:ss",
										"dd MMMM yyyy HH:mm:ss",
										"d MMM yyyy H:m:s",
										"d MMMM yyyy H:m:s",
										"d-M-yyyy H:m:s",
										"d-M-yyyy H:m",
										"yyyy-M-d H:m",
										"MM/dd/yyyy HH:mm",
										"M/d/yyyy H:m",
										"yyyy/MM/dd HH:mm",
										"yyyy/M/d H:m",
										"dd MMMM yyyy HH:mm",
										"dd MMM yyyy HH:mm",
										"d MMMM yyyy H:m",
										"d MMM yyyy H:m",
										"MM-dd-yyyy hh:mm:ss a",
										"MM-dd-yyyy HH:mm:ss",
										"MM/dd/yyyy hh:mm:ss a",
										"yyyy.MM.dd hh:mm:ss a",
										"MM/dd/yyyy",
										"dd/MM/yyyy",
										"yyyy/MM/dd",
										"MM-dd-yyyy",
										"dd-MM-yyyy",
										"yyyy-MM-dd",
										"dd.MM.yyyy",
										"MM.dd.yyyy",
										"yyyy.MM.dd"
									]
								},
								{
									"name": "enableCdc",
									"value": true
								},
								{
									"name": "skipInitialLoad",
									"value": true
								},
								{
									"name": "columnNamesAsHeader",
									"value": true
								},
								{
									"name": "columnDelimiter",
									"value": ","
								},
								{
									"name": "quoteChar",
									"value": "\\\""
								},
								{
									"name": "escapeChar",
									"value": "\\\\"
								}
							]
						}
					}
				],
				"TargetConnectionsInfo": [
					{
						"TargetEntities": [
							{
								"name": "dbo.inputcdc",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "inputcdc"
										}
									]
								}
							},
							{
								"name": "dbo.emp",
								"properties": {
									"schema": [],
									"dslConnectorProperties": [
										{
											"name": "schemaName",
											"value": "dbo"
										},
										{
											"name": "tableName",
											"value": "emp"
										}
									]
								}
							}
						],
						"Connection": {
							"linkedServiceType": "AzureSqlDatabase",
							"type": "linkedservicetype",
							"isInlineDataset": true,
							"commonDslConnectorProperties": [
								{
									"name": "allowSchemaDrift",
									"value": true
								},
								{
									"name": "inferDriftedColumnTypes",
									"value": true
								},
								{
									"name": "format",
									"value": "table"
								},
								{
									"name": "store",
									"value": "sqlserver"
								},
								{
									"name": "databaseType",
									"value": "databaseType"
								},
								{
									"name": "database",
									"value": "database"
								},
								{
									"name": "deletable",
									"value": false
								},
								{
									"name": "insertable",
									"value": true
								},
								{
									"name": "updateable",
									"value": false
								},
								{
									"name": "upsertable",
									"value": false
								},
								{
									"name": "skipDuplicateMapInputs",
									"value": true
								},
								{
									"name": "skipDuplicateMapOutputs",
									"value": true
								}
							]
						},
						"DataMapperMappings": [
							{
								"targetEntityName": "dbo.inputcdc",
								"sourceEntityName": "input/cdc",
								"sourceConnectionReference": {
									"connectionName": "Conn_AzureBlobStorage1",
									"type": "linkedservicetype"
								},
								"attributeMappingInfo": {
									"attributeMappings": []
								}
							}
						],
						"Relationships": []
					}
				],
				"Policy": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15
					},
					"mode": "Microbatch"
				},
				"status": "Stopped",
				"allowVNetOverride": true,
				"id": "4ffa53e776be42849c9101ffd683f936"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureKeyVault20')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureKeyVault20_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureKeyVault20_properties_groupId')]",
				"fqdns": "[parameters('AzureKeyVault20_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzurePostgreSql494')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzurePostgreSql494_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzurePostgreSql494_properties_groupId')]",
				"fqdns": "[parameters('AzurePostgreSql494_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/MPE-blob-jv36')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('MPE-blob-jv36_properties_privateLinkResourceId')]",
				"groupId": "[parameters('MPE-blob-jv36_properties_groupId')]",
				"fqdns": "[parameters('MPE-blob-jv36_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/MPE-sqldb1')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('MPE-sqldb1_properties_privateLinkResourceId')]",
				"groupId": "[parameters('MPE-sqldb1_properties_groupId')]",
				"fqdns": "[parameters('MPE-sqldb1_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/PrivateLinkService44')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('PrivateLinkService44_properties_privateLinkResourceId')]",
				"groupId": "[parameters('PrivateLinkService44_properties_groupId')]",
				"fqdns": "[parameters('PrivateLinkService44_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}